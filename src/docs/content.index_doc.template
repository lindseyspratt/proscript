<div class="indexed body" id="doc">
    <div class="indexed" id="reference">
        <h2>Reference</h2>
        This reference documentation is for the aspects of ProscriptLS that differ from ISO Prolog.
        <ul>
            <li class="indexed" id="using_proscriptls">
                <h3>Using ProscriptLS programs in a web browser:</h3>
                There are three parts to using a Prolog predicate in a browser.
                <ul>
                    <li>
                        Load the proscriptls.js library:
                        <pre class="html"><code>
&lt;script type="text/javascript" src="PROSCRIPTLS_git/dist/proscriptls.js"> &lt;/script></code></pre>
                        This library includes the ProscriptLS compiler.
                    </li>
                    <li>
                        Define ProscriptLS/Prolog program:
                        <pre class="html"><code>
&lt;script type="text/prolog">PROLOG_SOURCE&lt;/script> </code></pre>
                        or
                        <pre class="html"><code>
&lt;script type="text/prolog" src="PATH_TO_PROLOG_SOURCE"&lt;/script></code></pre>
                        This PROLOG_SOURCE will be compiled to WAM (Warren Abstract Machine) byte codes when the
                        proscriptls_init
                        function is evaluated.
                        These byte codes are interpreted by the WAM engine in the procriptls.js library.
                    </li>
                    <li>
                        Run proscriptls_init () function:
                        <pre class="html"><code>
&lt;body onload="proscriptls_init ();"> BODY &lt;/body></code></pre>
                        proscriptls_init () sets up the Prolog state including the core system predicates.
                        Also it finds all of the script elements with type 'text/prolog' and compiles the
                        associated sources.
                    </li>
                </ul>
                There appears to be an order-sensitivity in the layout of the HTML:
                the prolog script element should be at the end of the body element.
            </li>
            <li class="indexed" id="debugger">
                {{template_file('debugger.doc.template', [])}}
            </li>
            <li class="indexed" id="objects">
                {{template_file('objects.doc.template', [])}}
            </li>
            <li class="indexed" id="library">
                {{template_file('library.doc.template', [])}}
            </li>
            <li class="indexed" id="compilation">
                {{template_file('compilation.doc.template', [])}}
            </li>
        </ul>
    </div>
    <div class="indexed" id="examples">
        <h2>Examples</h2>
        These examples show uses of the ProscriptLS language.
        In each case the HTML source consults (compiles) ProscriptLS source and uses the ProscriptlS predicates.
        The only major uses of Javascript are the JQuery.Terminal library (used to present the ProscriptLS interpreter
        in some examples) and a custom Prolog interpreter.
        <ul>
            <li>
                <a href="../examples/calculator.html">A simple calculator.</a>
                This example demonstrates the use of events in ProscriptLS.
                <br>
                The original implementation of the calculator in regular Javascript is
                <a href="https://www.anaesthetist.com/mnm/javascript/calc.htm">here</a>.
            </li>
            <li>
                <a href="../examples/console_button_test.html">Toggle custom ProscriptLS interpreter console.</a>
                A page that presents a single button which toggles the presence of a ProscriptLS interpreter.
                The ProscriptLS interpreter console is implemented using a custom 'test.js' file instead of the full
                JQuery.terminal library.
            </li>
            <li>
                <a href="../examples/simple_test.html">Display 'hello world' alert dialog.</a>
                Clicking on a button causes 'hello world' to be displayed in an alert dialog.
            </li>
            <li>
                <a href="../examples/tau_likes.html">Querying a 'likes' predicate.</a>
                Some interactive elements support a user interface for displaying what a person likes
                from an editable definition of a likes/2 predicate.
                (This is adapted from the tau-prolog 'likes' example.)
            </li>
            <li>
                <a href="../examples/test.html">Custom Prolog interpreter and text area for Prolog source.</a>
                The Prolog text area is consulted when the 'consult' button is clicked.
                The predicates defined in the Prolog text area can be queried in the custom
                interpreter.
            </li>
            <li>
                <a href="../examples/tiles.html">Display a collection of selectable game tiles.</a>
                Displays a collection of 16 square tiles. 8 of these tiles are selectable.
            </li>
        </ul>
    </div>
</div>
